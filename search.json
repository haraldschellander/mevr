[{"path":"https://haraldschellander.github.io/mevr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Harald Schellander. Author, maintainer.            Package creator maintainer Alexander Lieb. Contributor.           Coded first versions MEVD SMEV Marc-Andre Falkensteiner. Contributor.           Developed TMEV","code":""},{"path":"https://haraldschellander.github.io/mevr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schellander H (2024). mevr: Fitting Metastatistical Extreme Value Distribution MEVD. R package version 1.2.3, https://haraldschellander.github.io/mevr/.","code":"@Manual{,   title = {mevr: Fitting the Metastatistical Extreme Value Distribution MEVD},   author = {Harald Schellander},   year = {2024},   note = {R package version 1.2.3},   url = {https://haraldschellander.github.io/mevr/}, }"},{"path":"https://haraldschellander.github.io/mevr/index.html","id":"mevr","dir":"","previous_headings":"","what":"Fitting the Metastatistical Extreme Value Distribution MEVD","title":"Fitting the Metastatistical Extreme Value Distribution MEVD","text":"R-functions Fitting Metastatistical Extreme Value Distribution MEVD. MEVD assumes daily rainfall extremes block maxima finite stochastically variable number “ordinary events” defined samples underlying distribution (Marani & Ignaccolo, 2015, Zorzetto et al., 2016). functions package can used fit MEVD, simplified sibling SMEV (Schellander et al., 2019, Marra et al., 2019) explicitly non-stationary approach TMEV (Falkensteiner et al., 2023) data series. package also includes functions preparation rainfall timeseries analysis sub-daily durations. particular, timeseries can separated independent events based defined dry spell duration. separated series can analysed maxima within events, defined ordinary events sub-daily duration. R-package mevr written development TMEV (Falkensteiner et al., 2023). See also GitHub repository contains original code.","code":""},{"path":"https://haraldschellander.github.io/mevr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fitting the Metastatistical Extreme Value Distribution MEVD","text":"easiest way get mevr install CRAN","code":"install.packages(\"mevr\")"},{"path":"https://haraldschellander.github.io/mevr/index.html","id":"development-version","dir":"","previous_headings":"","what":"Development version","title":"Fitting the Metastatistical Extreme Value Distribution MEVD","text":"install development version GitHub","code":"# install.packages(\"pak\") pak::pak(\"haraldschellander/mevr\")"},{"path":"https://haraldschellander.github.io/mevr/reference/censored_weibull_fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit Weibull distribution to censored data — censored_weibull_fit","title":"Fit Weibull distribution to censored data — censored_weibull_fit","text":"Finds optimal left-censoring threshold(s) data series censored make sure observations tail likely sampled Weibull distribution","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/censored_weibull_fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit Weibull distribution to censored data — censored_weibull_fit","text":"","code":"censored_weibull_fit(x, thresholds, warn)"},{"path":"https://haraldschellander.github.io/mevr/reference/censored_weibull_fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit Weibull distribution to censored data — censored_weibull_fit","text":"x tibble commonly result function weibull_tail_test. thresholds numeric vector quantiles shal tested optimal threshold left-censoring. warn TRUE default, warnings censoring given.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/censored_weibull_fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit Weibull distribution to censored data — censored_weibull_fit","text":"tibble optimal threshold Weibull scale shape parameters obtained censored sample.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/censored_weibull_fit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit Weibull distribution to censored data — censored_weibull_fit","text":"","code":"data(\"dailyrainfall\") wbtest <- weibull_tail_test(dailyrainfall) censored_weibull_fit(wbtest, 0.9) #> # A tibble: 1 × 4 #>   optimal_threshold scale shape quantile #>               <dbl> <dbl> <dbl>    <dbl> #> 1               234  96.0 0.912      0.9"},{"path":"https://haraldschellander.github.io/mevr/reference/dailyrainfall.html","id":null,"dir":"Reference","previous_headings":"","what":"Daily rainfall data — dailyrainfall","title":"Daily rainfall data — dailyrainfall","text":"dataset containing daily rainfall intended used package mevr","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/dailyrainfall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Daily rainfall data — dailyrainfall","text":"","code":"data(dailyrainfall)"},{"path":"https://haraldschellander.github.io/mevr/reference/dailyrainfall.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Daily rainfall data — dailyrainfall","text":"dataset contains real world daily rainfall observations station northern Alps. series contains values 1971 1985 assumed Weibull distributed. data series intended used input data package mevr fit metastatistical extreme value distribution variants different estimation methods. dataset dataframe two columns, dates val: dates Days class Date format YYYY-MM-DD val Rainfall observations corresponding date row. value 24 hour sum morning hours day-1 morning hours day.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/dailyrainfall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Daily rainfall data — dailyrainfall","text":"","code":"## Load example data data(dailyrainfall)  ## explore dataset head(dailyrainfall) #>        dates val #> 1 1971-01-02   9 #> 2 1971-01-03  25 #> 3 1971-01-20   2 #> 4 1971-01-22  13 #> 5 1971-01-27  13 #> 6 1971-02-01 101 hist(dailyrainfall$val)  plot(dailyrainfall$val, type = \"o\")"},{"path":"https://haraldschellander.github.io/mevr/reference/dmev.html","id":null,"dir":"Reference","previous_headings":"","what":"The Metastatistical Extreme Value Distribution — dmev","title":"The Metastatistical Extreme Value Distribution — dmev","text":"Density, distribution function, quantile function random generation MEV distribution shape parameter 'w', scale parameter 'c'. Parameter 'n' refers either mean number wet days per year case simplified MEV, number wet days year.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/dmev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The Metastatistical Extreme Value Distribution — dmev","text":"","code":"dmev(x, w, c, n)  pmev(q, w, c, n)  qmev(p, w, c, n)  rmev(N, w, c, n)"},{"path":"https://haraldschellander.github.io/mevr/reference/dmev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The Metastatistical Extreme Value Distribution — dmev","text":"x, q numeric vector single values quantiles dmev pmev. w, c vector single values shape scale parameter MEV distribution. vector, w c must length n. n Either mean number wet events per year SMEV, vector yearly MEVD calculations, .e. one value per year (see details). vector, n must length w c. p vector single value probabilities qmev. N Number observations sample MEVD SMEV.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/dmev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The Metastatistical Extreme Value Distribution — dmev","text":"dmev gives density function, pmev gives distribution function, qmev gives quantile function rmev provides random realizations SMEV MEVD.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/dmev.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"The Metastatistical Extreme Value Distribution — dmev","text":"pmev(): distribution quantile function qmev(): quantile function rmev(): random generation function","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/dmev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The Metastatistical Extreme Value Distribution — dmev","text":"","code":"# SMEV dmev(1200:1300, 0.7, 20, 110) #>   [1] 2.646170e-08 2.618540e-08 2.591207e-08 2.564165e-08 2.537413e-08 #>   [6] 2.510947e-08 2.484764e-08 2.458860e-08 2.433233e-08 2.407880e-08 #>  [11] 2.382798e-08 2.357983e-08 2.333434e-08 2.309146e-08 2.285117e-08 #>  [16] 2.261344e-08 2.237825e-08 2.214556e-08 2.191536e-08 2.168760e-08 #>  [21] 2.146227e-08 2.123934e-08 2.101878e-08 2.080057e-08 2.058468e-08 #>  [26] 2.037108e-08 2.015976e-08 1.995068e-08 1.974382e-08 1.953916e-08 #>  [31] 1.933667e-08 1.913634e-08 1.893812e-08 1.874202e-08 1.854799e-08 #>  [36] 1.835602e-08 1.816608e-08 1.797816e-08 1.779223e-08 1.760827e-08 #>  [41] 1.742626e-08 1.724618e-08 1.706800e-08 1.689170e-08 1.671727e-08 #>  [46] 1.654469e-08 1.637393e-08 1.620498e-08 1.603781e-08 1.587241e-08 #>  [51] 1.570875e-08 1.554683e-08 1.538661e-08 1.522808e-08 1.507123e-08 #>  [56] 1.491603e-08 1.476247e-08 1.461052e-08 1.446018e-08 1.431142e-08 #>  [61] 1.416423e-08 1.401859e-08 1.387449e-08 1.373190e-08 1.359081e-08 #>  [66] 1.345120e-08 1.331307e-08 1.317638e-08 1.304113e-08 1.290731e-08 #>  [71] 1.277489e-08 1.264386e-08 1.251421e-08 1.238591e-08 1.225897e-08 #>  [76] 1.213336e-08 1.200906e-08 1.188607e-08 1.176437e-08 1.164394e-08 #>  [81] 1.152478e-08 1.140686e-08 1.129018e-08 1.117472e-08 1.106047e-08 #>  [86] 1.094742e-08 1.083555e-08 1.072484e-08 1.061530e-08 1.050690e-08 #>  [91] 1.039964e-08 1.029349e-08 1.018846e-08 1.008452e-08 9.981668e-09 #>  [96] 9.879889e-09 9.779172e-09 9.679506e-09 9.580880e-09 9.483282e-09 #> [101] 9.386702e-09 pmev(1200:1300, 0.7, 70, 110) #>   [1] 0.9289803 0.9292715 0.9295616 0.9298504 0.9301380 0.9304244 0.9307096 #>   [8] 0.9309937 0.9312765 0.9315581 0.9318386 0.9321179 0.9323960 0.9326729 #>  [15] 0.9329487 0.9332233 0.9334968 0.9337691 0.9340403 0.9343103 0.9345792 #>  [22] 0.9348470 0.9351137 0.9353792 0.9356437 0.9359070 0.9361692 0.9364303 #>  [29] 0.9366903 0.9369492 0.9372071 0.9374638 0.9377195 0.9379741 0.9382277 #>  [36] 0.9384801 0.9387316 0.9389819 0.9392312 0.9394795 0.9397267 0.9399729 #>  [43] 0.9402181 0.9404622 0.9407053 0.9409474 0.9411885 0.9414285 0.9416676 #>  [50] 0.9419056 0.9421427 0.9423787 0.9426138 0.9428479 0.9430810 0.9433131 #>  [57] 0.9435442 0.9437744 0.9440036 0.9442319 0.9444592 0.9446855 0.9449109 #>  [64] 0.9451354 0.9453589 0.9455814 0.9458031 0.9460238 0.9462436 0.9464624 #>  [71] 0.9466804 0.9468974 0.9471135 0.9473287 0.9475430 0.9477565 0.9479690 #>  [78] 0.9481806 0.9483913 0.9486012 0.9488102 0.9490183 0.9492255 0.9494319 #>  [85] 0.9496374 0.9498420 0.9500458 0.9502487 0.9504508 0.9506521 0.9508524 #>  [92] 0.9510520 0.9512507 0.9514486 0.9516456 0.9518419 0.9520373 0.9522319 #>  [99] 0.9524256 0.9526186 0.9528108 qmev(1 - 1 / seq(5,50,5), 0.7, 70, 110) #>  [1]  948.9202 1116.9967 1215.4018 1285.7748 1340.7865 1386.0482 1424.5527 #>  [8] 1458.0898 1487.8169 1514.5267  # MEVD: 50-year event of 10 years Weibull series w <- rnorm(10, 0.8, 0.1) # shape parameter c <- rnorm(10, 200, 30) # scale parameter n <- rnorm(10, 200, 50) # number of wet days qmev(1 - 1 / 50, w, c, n) #> [1] 4917.247  # rl-plot rp <- seq(5, 50, 5) rl <- qmev(1 - 1 / rp, w, c, n) pp <- (1:length(rp)) / (length(rp) + 1) plot(pp, rl, type = \"o\")"},{"path":"https://haraldschellander.github.io/mevr/reference/dtmev.html","id":null,"dir":"Reference","previous_headings":"","what":"The non-stationary Metastatistical Extreme Value Distribution — dtmev","title":"The non-stationary Metastatistical Extreme Value Distribution — dtmev","text":"Quantile function TMEV distribution Weibull parent distribution.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/dtmev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The non-stationary Metastatistical Extreme Value Distribution — dtmev","text":"","code":"dtmev(x, data)  ptmev(q, data)  qtmev(p, data)"},{"path":"https://haraldschellander.github.io/mevr/reference/dtmev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The non-stationary Metastatistical Extreme Value Distribution — dtmev","text":"x, q Numeric vector single value probabilities dtmev. data data frame least columns c, w year. Can taken output fitted TMEV object, .e. x$data (see ftmev). p Numeric vector single value probabilities qtmev.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/dtmev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The non-stationary Metastatistical Extreme Value Distribution — dtmev","text":"dtmev gives density function, ptmev gives distribution function, qtmev gives quantile function TMEV.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/dtmev.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"The non-stationary Metastatistical Extreme Value Distribution — dtmev","text":"ptmev(): distribution quantile function qtmev(): distribution quantile function","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/dtmev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The non-stationary Metastatistical Extreme Value Distribution — dtmev","text":"","code":"data(dailyrainfall) fit <- ftmev(dailyrainfall) rp <- pp.weibull(fit$maxima) rl <- qtmev(1 - 1 / rp, fit$data) plot(rp, sort(fit$maxima), main = \"TMEV\", ylab = \"return level\", xlab = \"return period (years)\") lines(rp, rl, type = \"l\")"},{"path":"https://haraldschellander.github.io/mevr/reference/event_separation.html","id":null,"dir":"Reference","previous_headings":"","what":"Detect Rainfall Events with Specified Separation Time (Dry Time) and Minimum Rain Threshold — event_separation","title":"Detect Rainfall Events with Specified Separation Time (Dry Time) and Minimum Rain Threshold — event_separation","text":"`event_separation` function identifies rainfall events time-series data based minimum rainfall threshold separation time events. uses morphological operations detect separate events, can ignore short events meet minimum duration criterion. Based Marra...","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/event_separation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Detect Rainfall Events with Specified Separation Time (Dry Time) and Minimum Rain Threshold — event_separation","text":"","code":"event_separation(   data,   separation_in_min = 360,   time_resolution = 10,   ignore_event_duration = 30,   min_rain = 0.1 )"},{"path":"https://haraldschellander.github.io/mevr/reference/event_separation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Detect Rainfall Events with Specified Separation Time (Dry Time) and Minimum Rain Threshold — event_separation","text":"data data frame two columns, observation date values. `groupvar`: time variable (e.g., POSIXct Date) indicating timestamp observation. `val`: numeric vector containing observed rainfall values. separation_in_min Numeric. minimum dry period (minutes) separates two distinct rainfall events. Default 360 minutes (6 hours). Values less min_rain count zero. Note depend local climatological conditions. time_resolution Numeric. time step resolution data (minutes). example, observations recorded every 10 minutes, `time_resolution` 10. Default 10 minutes. ignore_event_duration Numeric. minimum duration (minutes) rainfall required event considered valid. Events shorter ignored. Default 30 minutes. min_rain Numeric. minimum rainfall value (e.g., mm) required data point considered part event. Default 0.1.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/event_separation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Detect Rainfall Events with Specified Separation Time (Dry Time) and Minimum Rain Threshold — event_separation","text":"list following elements: `data`: modified version input data additional     column `is_event`, indicating whether time step part     detected event (1 event, 0 event). useful     next step event_separation. `fromto`: tibble two columns, `` ``,     representing indices start (``) end (``)     detected rainfall event. `ts_res`: time resolution used function (minutes).","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/event_separation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Detect Rainfall Events with Specified Separation Time (Dry Time) and Minimum Rain Threshold — event_separation","text":"function works first dilating rainfall data using structuring element defined separation time, followed erosion remove noise. detects events based separation time minimum rainfall threshold, returning time intervals events occurred. Events span two years shorter `ignore_event_duration` ignored.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/event_separation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Detect Rainfall Events with Specified Separation Time (Dry Time) and Minimum Rain Threshold — event_separation","text":"","code":"if (FALSE) { # \\dontrun{ # Example data mock_data <- data.frame(   groupvar = seq.POSIXt(Sys.time(), by = \"10 min\", length.out = 100),   val = c(rep(0, 10), runif(20, 0, 1), rep(0, 70)) )  # Detect rainfall events with a separation of 6 hours and a minimum rain threshold of 0.1 result <- event_separation(mock_data, separation_in_min = 360, time_resolution = 10, min_rain = 0.1) print(result$fromto)  # View detected events } # }"},{"path":"https://haraldschellander.github.io/mevr/reference/fmev.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the Metastatistical Extreme Value Distribution (MEVD) — fmev","title":"Fitting the Metastatistical Extreme Value Distribution (MEVD) — fmev","text":"Fit MEVD distribution rainfall observations different estimation methods.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/fmev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the Metastatistical Extreme Value Distribution (MEVD) — fmev","text":"","code":"fmev(   data,   threshold = 0,   method = c(\"pwm\", \"mle\", \"ls\"),   censor = FALSE,   censor_opts = list(),   warn = TRUE )"},{"path":"https://haraldschellander.github.io/mevr/reference/fmev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the Metastatistical Extreme Value Distribution (MEVD) — fmev","text":"data data MEVD fitted . data must data.frame two columns. first column must contain dates class  Date, second last column must contain rainfall values corresponding datums rows. negative values allowed. NA values removed warning. threshold numeric used define wet days values > threshold. \\(data <= threshold\\) set NA. method Character string describing method used estimate Weibull parameters c w. Possible options probability weighted moments (method='pwm'), maximum likelihood (method='mle') least squares (method='ls'). default pwm. (see details). censor censor=TRUE, data series left-censored assure observed maxima samples weibull tail. Defaults censor=FALSE. censor_opts empty list can populated components thresholds, mon, nrtrials R. give range quantiles used left-censoring threshold, month block starts, number trials used achieve weibull fit left-censored sample, number synthetic samples used test statistics, respectively. See also weibull_tail_test. warn TRUE default, warnings censoring given.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/fmev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the Metastatistical Extreme Value Distribution (MEVD) — fmev","text":"list class mevr fitted Weibull parameters helpful ingredients. c vector Weibull scale parameters MEVD, component refers one year. w vector Weibull shape parameters MEVD, component refers one year. n Number wet events per year. Wet events defined rainfall > threshold. params named vector fitted parameters. maxima Maximum values corresponding year. data \\(data >= threshold\\) used fit MEVD additional components may useful analysis. years Vector years YYYY. threshold chosen threshold. method Method used fit MEVD. type type distribution (\"MEVD\")","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/fmev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the Metastatistical Extreme Value Distribution (MEVD) — fmev","text":"aim weakening requirement asymptotic assumption GEV distribution, metastatistical approach proposed Marani Ignaccolo (2015). MEVD defined terms distribution statistical parameters describing \"ordinary\" daily rainfall occurrence intensity. MEVD accounts random process event occurrence block possibly changing probability distribution event magnitudes across different blocks, recognizing number events block, n, values shape scale parameters w C parent Weibull distribution realisations stochastic variables. MEVD can written $$F = \\frac{1}{T} \\sum_{j=1}^T \\prod_{k \\A_j} \\left( 1-e^{-\\left(\\frac{x}{C(j,k)}\\right)^{w(j,k)}} \\right)$$ \\(w > 0\\) \\(C > 0\\). T fully recorded years, yearly C w can estimated fitting Weibull distribution values x year, n number ordinary events per year, .e. rainfall events larger threshold. probability distribution daily rainfall assumed time-invariant, MEVD can simplified $$F = [1 - exp(-x/C)^w]^n$$ single values shape scale parameters w C. n mean number wet days location (Marra et al., 2019; Schellander et al., 2019). shown e.g. Schellander et al., 2019, probability weighted moments preferred maximum likelihood estimation Weibull parameters w C. Therefore method = 'pwm' default. MEVD can also used sub-daily precipitation (Marra et al., 2019). case n adapted accordingly 'mean number wet events' per year. function returns parameters fitted MEVD distribution well additional fitting results input parameters useful analysis.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/fmev.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the Metastatistical Extreme Value Distribution (MEVD) — fmev","text":"Marani, M. Ignaccolo, M. (2015) 'metastatistical approach rainfall extremes', Advances Water Resources. Elsevier Ltd, 79(Supplement C), pp. 121-126. doi: 10.1016/j.advwatres.2015.03.001. Schellander, H., Lieb, . Hell, T. (2019) 'Error Structure Metastatistical Generalized Extreme Value Distributions Modeling Extreme Rainfall Austria', Earth Space Science, 6, pp. 1616-1632. doi: 10.1029/2019ea000557.","code":""},{"path":[]},{"path":"https://haraldschellander.github.io/mevr/reference/fmev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fitting the Metastatistical Extreme Value Distribution (MEVD) — fmev","text":"Harald Schellander, Alexander Lieb","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/fmev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the Metastatistical Extreme Value Distribution (MEVD) — fmev","text":"","code":"data(dailyrainfall) fit <- fmev(dailyrainfall, method = \"mle\") fit #> MEVD fitting #>  #> Type: MEVD #> Estimator: mle #>  #> Parameters: #> Scale C: #>  [1]   75.30   85.50   83.66  111.86   83.06  110.43   91.39   78.56   90.65 #> [10]   84.84  100.45   77.33  105.16   90.53   89.29 #>  #> Shape w: #>  [1]  0.8109  0.9163  0.8648  0.9482  0.8515  0.9411  0.8937  0.8472  0.8564 #> [10]  0.9128  0.9329  0.8363  0.8421  0.9537  0.8436 #>  #> Wet events n: #>  [1]  151  148  187  190  169  157  185  193  202  211  202  176  169  170  178 #>  #> Years: #> [1]  15 #>  #> Threshold: #> [1]  0 plot(fit)"},{"path":"https://haraldschellander.github.io/mevr/reference/fsmev.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the simplified Metastatistical Extreme Value Distribution (SMEV) — fsmev","title":"Fitting the simplified Metastatistical Extreme Value Distribution (SMEV) — fsmev","text":"Fit SMEV distribution rainfall observations different estimation methods.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/fsmev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the simplified Metastatistical Extreme Value Distribution (SMEV) — fsmev","text":"","code":"fsmev(   data,   threshold = 0,   method = c(\"pwm\", \"mle\", \"ls\"),   censor = FALSE,   censor_opts = list(),   warn = TRUE,   sd = FALSE,   sd.method = \"boot\",   R = 502 )"},{"path":"https://haraldschellander.github.io/mevr/reference/fsmev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the simplified Metastatistical Extreme Value Distribution (SMEV) — fsmev","text":"data data SMEV fitted . data must data.frame two columns. first column must contain dates class Date, second last column must contain rainfall values corresponding datums rows. negative values allowed. NA values removed warning. threshold numeric used define wet days values > threshold. \\(data <= threshold\\) set NA. method Character string describing method used estimate Weibull parameters c w. Possible options probability weighted moments (method='pwm'), maximum likelihood (method='mle') least squares (method='ls'). default pwm. (see details). censor censor=TRUE, data series left-censored assure observed maxima samples weibull tail. Defaults censor=FALSE. censor_opts empty list can populated components thresholds, mon, nrtrials R. give range quantiles used left-censoring threshold, month block starts, number trials used achieve weibull fit left-censored sample, number synthetic samples used test statistics, respectively. See also weibull_tail_test. warn TRUE default, warnings censoring given. sd sd=TRUE, confidence intervals SMEV distribution calculated (see details). sd.method Currently non parametric bootstrap technique can used calculate SMEV confidence intervals sd.method='boot'. default sd=FALSE. R number samples drawn SMEV distribution calculate confidence intervals sd.method='boot'","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/fsmev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the simplified Metastatistical Extreme Value Distribution (SMEV) — fsmev","text":"list class mevr components: c Single value Weibull scale parameter SMEV. w Single value Weibull shape parameter SMEV. n Mean number wet events, averaged years. Wet events defined rainfall > threshold. params named vector fitted parameters. maxima Maximum values corresponding year. std Standard error fitted parameters (sd=TRUE). varcov Covariance matrix fitted parameters (sd=TRUE). data \\(data >= threshold\\) used fit SMEV additional components may useful analysis. years Vector years YYYY. threshold chosen threshold. method Method used fit MEVD. censor TRUE data-series left-censored FALSE otherwise. type type distribution (\"SMEV\") rejected censor=TRUE, rejected=TRUE Weibull tail assumption rejected rejected=FALSE otherwise. censor=FALSE value returned.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/fsmev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the simplified Metastatistical Extreme Value Distribution (SMEV) — fsmev","text":"SMEV introduced (Marra et al., 2019) simplified version MEVD (Marani Ignaccolo, 2015) assumption stationary parent Weibull distribution $$F = [1 - exp(-x/C)^w]^n$$ \\(w > 0\\) \\(C > 0\\) Weibull shape scale parameter \\(n > 0\\) mean number wet days years. Wet days defined rainfall events > threshold. shown e.g. Schellander et al., 2019, probability weighted moments preferred maximum likelihood estimation Weibull parameters w C. Therefore method = 'pwm' default. Confidence intervals SMEV distribution can calculated using non parametric bootstrap technique. Note slow. function returns parameters fitted SMEV distribution well additional fitting results input parameters useful analysis.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/fsmev.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the simplified Metastatistical Extreme Value Distribution (SMEV) — fsmev","text":"Marra, F. et al. (2019) 'simplified MEV formulation model extremes emerging multiple nonstationary underlying processes', Advances Water Resources. Elsevier Ltd, 127(April), pp. 280-290. doi: 10.1016/j.advwatres.2019.04.002.","code":""},{"path":[]},{"path":"https://haraldschellander.github.io/mevr/reference/fsmev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fitting the simplified Metastatistical Extreme Value Distribution (SMEV) — fsmev","text":"Harald Schellander, Alexander Lieb","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/fsmev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the simplified Metastatistical Extreme Value Distribution (SMEV) — fsmev","text":"","code":"data(dailyrainfall)  fit <- fsmev(dailyrainfall) fit #> MEVD fitting #>  #> Type: SMEV #> Estimator: pwm #>  #> Parameters: #> Scale C: #> [1]  89.59 #>  #> Shape w: #> [1]  0.8643 #>  #> Mean number of wet events n: #> [1]  179.2 #>  #> Threshold: #> [1]  0 plot(fit)   # left censor data prior to fitting set.seed(123) sample_dates <- seq.Date(from = as.Date(\"2000-01-01\"), to = as.Date(\"2020-12-31\"), by = 1) sample_data <- data.frame(dates = sample_dates, val = sample(rnorm(length(sample_dates)))) d <- sample_data |>   filter(val >= 0 & !is.na(val))  fit <- fsmev(d) fit_c <- fsmev(d,                 censor = TRUE,                 censor_opts = list(thresholds = c(seq(0.5, 0.9, 0.1), 0.95),                                   mon = 1,                                   nrtrials = 2,                                   R = 100))  rp <- 2:100 rl <- return.levels.mev(fit, return.periods = rp) rl_c <- return.levels.mev(fit_c, return.periods = rp) plot(sort(pp.weibull(fit$maxima)), sort(fit$maxima),    xlab = \"Return period (a)\", ylab = \"daily rain (mm)\") lines(rl$rp, rl$rl) lines(rl_c$rp, rl_c$rl, col = \"red\") legend(\"bottomright\", legend = c(\"std\", \"censored\"),    col = c(\"black\", \"red\"), lty = c(1, 2), lwd = c(1, 1.5), bty = \"n\")"},{"path":"https://haraldschellander.github.io/mevr/reference/ftmev.html","id":null,"dir":"Reference","previous_headings":"","what":"Fitting the temporal Metastatistical Extreme Value Distribution (TMEV) — ftmev","title":"Fitting the temporal Metastatistical Extreme Value Distribution (TMEV) — ftmev","text":"Fit temporal MEVD distribution TMEV rainfall observations cyclic spline account seasonality.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/ftmev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fitting the temporal Metastatistical Extreme Value Distribution (TMEV) — ftmev","text":"","code":"ftmev(   data,   threshold = 0,   minyears = 10,   day_year_interaction = FALSE,   verbose = FALSE,   yday_ti_shape_k = 10,   yday_ti_scale_k = 10,   year_ti_shape_k = 10,   year_ti_scale_k = 10 )"},{"path":"https://haraldschellander.github.io/mevr/reference/ftmev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fitting the temporal Metastatistical Extreme Value Distribution (TMEV) — ftmev","text":"data data TMEV fitted . data must data.frame two columns. first column must contain dates class  Date, second last column must contain rainfall values corresponding datums rows. negative values allowed. NA values removed warning. threshold numeric used define wet days values > threshold. \\(data <= threshold\\) set NA. minyears Minimum number available years fitting cyclic spline non-stationary data series (see details). day_year_interaction Logical. additional year vs day year interaction used calculation temporal trend seasonality?  (see details). Default FALSE. verbose Logical. TRUE, verbose output temporal fitting process shown runtime. yday_ti_shape_k numeric used set dimension bases used represent smooth term ti() yday formula shape. yday_ti_scale_k numeric used set dimension bases used represent smooth term ti() yday formula scale. year_ti_shape_k numeric used set dimension bases used represent smooth term ti() year formula shape (used day_year_interaction == TRUE). year_ti_scale_k numeric used set dimension bases used represent smooth term ti() year formula scale (used day_year_interaction == TRUE).","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/ftmev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fitting the temporal Metastatistical Extreme Value Distribution (TMEV) — ftmev","text":"list class mevr components: c Vector Weibull scale parameters TMEV, row refers one event, day daiyl rainfall. w Vector Weibull shape parameters TMEV, row refers one event, day daiyl rainfall. n Number wet events per year. Wet events defined rainfall > threshold. maxima Maximum values corresponding year. data data frame data used fit TMEV fitted Weibull parameters c w. years Vector years YYYY. threshold chosen threshold. x fitted bamlss object. type type distribution (\"TMEV\"). minyears minimum number years used fit TMEV provided.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/ftmev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fitting the temporal Metastatistical Extreme Value Distribution (TMEV) — ftmev","text":"aim exploiting full temporal information parameter estimation, Falkensteiner et al., (2023) introduced TMEV, explicitly non-stationary formulation MEVD (Marani Ignaccolo, 2015). Adopting Weibull distribution ordinary rainfall events, assumption yearly constant coefficients relaxed allowing Weibull parameters fluctuate time. TMEV can written $$F = \\frac{1}{T} \\sum_{j=1}^T \\prod_{k \\A_j} \\left( 1-e^{-\\left(\\frac{x}{C(j,k)}\\right)^{w(j,k)}} \\right)$$ \\(w > 0\\) \\(C > 0\\) Weibull shape scale parameters, $A_j \\subseteq (1, ..., 366)$ wet days year j. temporal superimposed seasonal dependence w c modeled cyclic seasonal effect day year. Technically accomplished fitting cyclic spline daily rainfall values. following formula used fitting procedure Weibull scale shape parameter function bamlss package bamlss: $$parameter = x \\sim s(year) + ti(yday, bs = \"cc\", k = 10)$$ first effect models long-term temporal trend parameter thin-plate spline. second effect models superimposed seasonal fluctuations parameter 'day year' cyclic cubic regression spline 10 knots, ensure smooth transition December January. number knots (k) equation can set separately year yday effect well separately shape scale parameter Weibull distribution. can done overwriting parameters yday_ti_shape_k, yday_ti_scale_k, year_ti_shape_k, year_ti_scale_k call ftmev. Note values depend many factors, structure data, TMEV fitted . Please refer documentation packages bamlss , particular mgcv. data series lengths < 10 years, first temporal effect changed simple linear time trend. trend analysis, additional interaction term can added model formula. following term models relationship seasonality day year year combination thin plate cyclic cubic spline: $$ti(year, yday, bs = c(\"tp\", \"cc\"), d = c(1, 1), k = c(year_ti_k, yday_ti_k))$$ function returns parameters fitted TMEV distribution well additional fitting results input parameters useful analysis.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/ftmev.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Fitting the temporal Metastatistical Extreme Value Distribution (TMEV) — ftmev","text":"Marani, M. Ignaccolo, M. (2015) 'metastatistical approach rainfall extremes', Advances Water Resources. Elsevier Ltd, 79(Supplement C), pp. 121-126. doi: 10.1016/j.advwatres.2015.03.001. Falkensteiner, M., Schellander, H., Hell, T. (2023) 'Accounting seasonality metastatistical extreme value distribution', (Weather Climate Extremes, 42, 2023, https://doi.org/10.1016/j.wace.2023.100601).","code":""},{"path":[]},{"path":"https://haraldschellander.github.io/mevr/reference/ftmev.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Fitting the temporal Metastatistical Extreme Value Distribution (TMEV) — ftmev","text":"Marc-Andre Falkensteiner, Harald Schellander","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/ftmev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fitting the temporal Metastatistical Extreme Value Distribution (TMEV) — ftmev","text":"","code":"data(dailyrainfall) fit <- ftmev(dailyrainfall) plot(fit, type = \"rl\")   # temporal trend of the Weibull parameters  pred <- predict(fit) pred_year <- predict(fit, term = \"year\") boxplot(c.pred ~ year, data = pred) with(pred_year, lines(year - 1970, c.pred.year, type = \"b\", pch = 20, col = \"red\"))"},{"path":"https://haraldschellander.github.io/mevr/reference/ordinary_events.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies ordinary rainfall events by calculating the maximum within rainfall events defined with event_separation — ordinary_events","title":"Identifies ordinary rainfall events by calculating the maximum within rainfall events defined with event_separation — ordinary_events","text":"`ordinary_events` function calculates rolling sum values provided data specified duration identifies events highest sum within defined time intervals. useful detecting significant events based aggregated values time.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/ordinary_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies ordinary rainfall events by calculating the maximum within rainfall events defined with event_separation — ordinary_events","text":"","code":"ordinary_events(x, duration, na.rm = TRUE)"},{"path":"https://haraldschellander.github.io/mevr/reference/ordinary_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies ordinary rainfall events by calculating the maximum within rainfall events defined with event_separation — ordinary_events","text":"x list containing least following elements (usually output function event_separation): `data`: data frame data table least two columns:     `val` (values sum) `groupvar` (timestamps another     grouping variable). `ts_res`: time resolution data minutes (.e.,     many minutes time step represents). `fromto`: data frame two columns: `` ``,     representing start end indices time intervals analyze. duration Numeric. duration minutes maxima shall calculated. na.rm Logical. Removes lines NA values x na.rm = TRUE.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/ordinary_events.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies ordinary rainfall events by calculating the maximum within rainfall events defined with event_separation — ordinary_events","text":"Returns tibble individual rainfall events can used input functions fsmev, fmev, ftmev.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/ordinary_events.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies ordinary rainfall events by calculating the maximum within rainfall events defined with event_separation — ordinary_events","text":"","code":"if (FALSE) { # \\dontrun{ # Example usage x <- list(   data = data.frame(val = runif(100),    groupvar = seq.POSIXt(Sys.time(),                          by = \"10 min\",                          length.out = 100)                         ),   ts_res = 10,   fromto = data.frame(from = c(1, 51), to = c(50, 100)) ) duration <- 30 result <- ordinary_events(x, duration) print(result) } # }"},{"path":"https://haraldschellander.github.io/mevr/reference/plot.mevr.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot graphs of MEVD, SMEV or TMEV fit — plot.mevr","title":"Plot graphs of MEVD, SMEV or TMEV fit — plot.mevr","text":"return level plot, qq-plot, pp-plot histogram fitted density produced","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/plot.mevr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot graphs of MEVD, SMEV or TMEV fit — plot.mevr","text":"","code":"# S3 method for class 'mevr' plot(   x,   q = c(2, 10, 20, 30, 50, 75, 100, 150, 200),   ci = FALSE,   type = c(\"all\", \"rl\", \"qq\", \"pp\", \"hist\"),   ... )"},{"path":"https://haraldschellander.github.io/mevr/reference/plot.mevr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot graphs of MEVD, SMEV or TMEV fit — plot.mevr","text":"x object classmevr, whose type argument one MEVD, SMEV TMEV q vector return periods, \\(q > 1\\). ci ci=TRUE, confidence intervals computed. type omitted panel return level plot (type='rl', density plot (type='hist'), qq-plot (type='qq') probability plot (tpe='pp') shown. ... parameters may also supplied arguments. See e.g. plot.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/plot.mevr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot graphs of MEVD, SMEV or TMEV fit — plot.mevr","text":"return value, plot produced.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/plot.mevr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot graphs of MEVD, SMEV or TMEV fit — plot.mevr","text":"","code":"data(dailyrainfall)  # fit a simplified MEVD fit <- fsmev(dailyrainfall) fit #> MEVD fitting #>  #> Type: SMEV #> Estimator: pwm #>  #> Parameters: #> Scale C: #> [1]  89.59 #>  #> Shape w: #> [1]  0.8643 #>  #> Mean number of wet events n: #> [1]  179.2 #>  #> Threshold: #> [1]  0 plot(fit)   # fit MEVD fit <- fmev(dailyrainfall, method = \"ls\") fit #> MEVD fitting #>  #> Type: MEVD #> Estimator: ls #>  #> Parameters: #> Scale C: #>  [1]   73.06   83.63   82.86  111.02   80.30  110.29   91.17   77.17   90.30 #> [10]   84.21   99.11   76.29  104.38   90.32   87.46 #>  #> Shape w: #>  [1]  0.8479  0.9436  0.8561  0.9454  0.9251  0.9151  0.8832  0.8863  0.8455 #> [10]  0.9110  0.9830  0.8577  0.8290  0.9364  0.8876 #>  #> Wet events n: #>  [1]  151  148  187  190  169  157  185  193  202  211  202  176  169  170  178 #>  #> Years: #> [1]  15 #>  #> Threshold: #> [1]  0 plot(fit)"},{"path":"https://haraldschellander.github.io/mevr/reference/pp.weibull.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull plotting position — pp.weibull","title":"Weibull plotting position — pp.weibull","text":"Calculates Weibull plotting position given maxima","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/pp.weibull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull plotting position — pp.weibull","text":"","code":"pp.weibull(x)"},{"path":"https://haraldschellander.github.io/mevr/reference/pp.weibull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull plotting position — pp.weibull","text":"x Numeric vector block maxima","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/pp.weibull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weibull plotting position — pp.weibull","text":"numeric vector Weibull plotting positions corresponding given maxima x","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/pp.weibull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weibull plotting position — pp.weibull","text":"","code":"data(dailyrainfall) fit <- fsmev(dailyrainfall) rp <- pp.weibull(fit$maxima) rl <- return.levels.mev(fit, return.periods = rp) plot(rp, sort(fit$maxima), xlab = \"Return period (years)\", ylab = \"Return level\", main = fit$type) lines(rp, rl$rl)"},{"path":"https://haraldschellander.github.io/mevr/reference/predict.mevr.html","id":null,"dir":"Reference","previous_headings":"","what":"TMEV prediction — predict.mevr","title":"TMEV prediction — predict.mevr","text":"Takes mevr object TMEV fitted rainfall data calculates bamlss predictions distributional parameters model terms. Basically wrapper corresponding function predict.bamlss","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/predict.mevr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TMEV prediction — predict.mevr","text":"","code":"# S3 method for class 'mevr' predict(object, newdata, term, ...)"},{"path":"https://haraldschellander.github.io/mevr/reference/predict.mevr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TMEV prediction — predict.mevr","text":"object Object class mevr, fitted TMEV. newdata data frame model covariates (year, yday) predictions required. Note depending argument term, covariates needed corresponding model terms need supplied. supplied, predictions made data supplied fitted object x. term Character model terms predictions shall calculated. Can \"year\" \"yday\". specified, predictions terms calculated. ... Arguments passed prediction functions part bamlss.family object, .e., objects $predict() function used instead.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/predict.mevr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"TMEV prediction — predict.mevr","text":"data.frame supplied covariables predicted parameters.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/predict.mevr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"TMEV prediction — predict.mevr","text":"See also details ftmev explanation model terms used fit temporal trend Weibull parameters. basis dimensions yday_ti_shape_k, yday_ti_scale_k, year_ti_shape_k, year_ti_scale_k taken fitting process, .e. call ftmev.","code":""},{"path":[]},{"path":"https://haraldschellander.github.io/mevr/reference/predict.mevr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"TMEV prediction — predict.mevr","text":"","code":"data(dailyrainfall)  # restrict for the sake of speed idx <- which(as.POSIXlt(dailyrainfall$date)$year + 1900 < 1976) data <- dailyrainfall[idx, ]  f <- ftmev(data, minyears = 5) predict(f, term = \"year\") #>   year c.pred.year w.pred.year #> 1 1971    79.87684   0.8607488 #> 2 1972    83.21258   0.8772784 #> 3 1973    86.68762   0.8941253 #> 4 1974    90.30778   0.9112958 #> 5 1975    94.07913   0.9287961"},{"path":"https://haraldschellander.github.io/mevr/reference/print.mevr.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for object of class mevr — print.mevr","title":"Print method for object of class mevr — print.mevr","text":"Print nicely formatted output fit MEVD variants","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/print.mevr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for object of class mevr — print.mevr","text":"","code":"# S3 method for class 'mevr' print(x, digits = max(3, getOption(\"digits\") - 3), ...)"},{"path":"https://haraldschellander.github.io/mevr/reference/print.mevr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for object of class mevr — print.mevr","text":"x Object class mevr, fitted MEVD, SMEV TMEV. digits Number digits. ... Additional parameters.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/print.mevr.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for object of class mevr — print.mevr","text":"nicely formatted output fitting results.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/print.mevr.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for object of class mevr — print.mevr","text":"","code":"data(dailyrainfall)  # fit a simplified MEVD fit <- fsmev(dailyrainfall) print(fit) #> MEVD fitting #>  #> Type: SMEV #> Estimator: pwm #>  #> Parameters: #> Scale C: #> [1]  89.59 #>  #> Shape w: #> [1]  0.8643 #>  #> Mean number of wet events n: #> [1]  179.2 #>  #> Threshold: #> [1]  0"},{"path":"https://haraldschellander.github.io/mevr/reference/return.levels.mev.html","id":null,"dir":"Reference","previous_headings":"","what":"Return Levels for the MEVD/SMEV/TMEV extreme value distributions — return.levels.mev","title":"Return Levels for the MEVD/SMEV/TMEV extreme value distributions — return.levels.mev","text":"Calculate return levels MEVD, SMEV TMEV extreme value distributions object class mevr.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/return.levels.mev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return Levels for the MEVD/SMEV/TMEV extreme value distributions — return.levels.mev","text":"","code":"return.levels.mev(   x,   return.periods = c(2, 10, 20, 30, 50, 75, 100, 150, 200),   ci = FALSE,   alpha = 0.05,   method = \"boot\",   R = 502,   ncores = 2L )"},{"path":"https://haraldschellander.github.io/mevr/reference/return.levels.mev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return Levels for the MEVD/SMEV/TMEV extreme value distributions — return.levels.mev","text":"x object class mevr, either fitted MEVD, SMEV TMEV return.periods vector return periods years, excluding 1. ci ci=TRUE, confidence intervals calculated depending type distribution (MEVD SMEV). alpha Number zero one giving 1 - alpha confidence level. Defaults alpha=0.05. method Character string giving method confidence interval calculation. Option method='boot' employs parametric bootstrap simulates data fitted model, fits chosen MEVD type simulated data set obtain sample parameters return levels (slow). R number bootstrap iterations. ncores Number cores used parallel computing confidence intervals. Defaults 2.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/return.levels.mev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return Levels for the MEVD/SMEV/TMEV extreme value distributions — return.levels.mev","text":"list return levels, chosen return periods , ci=TRUE, alpha/2 1 - alpha/2 confidence intervals.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/return.levels.mev.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return Levels for the MEVD/SMEV/TMEV extreme value distributions — return.levels.mev","text":"Note bootstraping confidence intervals slow.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/return.levels.mev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return Levels for the MEVD/SMEV/TMEV extreme value distributions — return.levels.mev","text":"","code":"data(dailyrainfall)  fit <- fmev(dailyrainfall) return.levels.mev(fit) #> $rl #> [1]  648.3965  929.8449 1041.5999 1107.0636 1190.1504 1256.7824 1304.4884 #> [8] 1372.3864 1421.0530 #>  #> $rp #> [1]   2  10  20  30  50  75 100 150 200 #>  plot(fit)"},{"path":"https://haraldschellander.github.io/mevr/reference/weibull_tail_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Weibull tail test — weibull_tail_test","title":"Weibull tail test — weibull_tail_test","text":"functions provides way test observed rainfall maxima data series likely samples parent distribution Weibull tail. concept code based paper Marra F, W Amponsah, SM Papalexiou, 2023. Non-asymptotic Weibull tails explain statistics extreme daily precipitation. Adv. Water Resour., 173, 104388, https://doi.org/10.1016/j.advwatres.2023.104388. also provide corresponding Matlab code (https://zenodo.org/records/7234708).","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/weibull_tail_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weibull tail test — weibull_tail_test","text":"","code":"weibull_tail_test(   data,   threshold = 0,   mon = 1,   cens_quant = 0.9,   p_test = 0.1,   R = 500 )"},{"path":"https://haraldschellander.github.io/mevr/reference/weibull_tail_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weibull tail test — weibull_tail_test","text":"data data.frame threshold numeric used define wet days values > threshold. mon month defines block whose maxima tested. block goes month-YYYY-1 month-YYYY. cens_quant quantile tail test performed. Must single numeric. p_test numeric defining 1 - p_test confidence band. function tests ratio observed block maxima p_test 1 - p_test. See details. R number synthetic samples.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/weibull_tail_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weibull tail test — weibull_tail_test","text":"tibble test outcome useful results: is_rejected outcome test (TRUE means assumption   Weibull tails given left-censoring threshold rejected). p_out fraction block maxima outside Y = 1 - p_out confidence interval p_hi fraction block maxima Y = 1 - p_out confidence interval p_lo fraction block maxima Y = 1 - p_out confidence interval scale scale parameter Weibull distribution describing non-censored samples shape shape parameter Weibull distribution describing non-censored samples quant quantile used left-censoring threshold","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/weibull_tail_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weibull tail test — weibull_tail_test","text":"Null-Hyothesis: block maxima samples parent distribution Weibull tail (tail defined given left-censoring threshold). fraction observed block maxima outside interval defined p_test larger p_test null hypothesis rejected.","code":""},{"path":"https://haraldschellander.github.io/mevr/reference/weibull_tail_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weibull tail test — weibull_tail_test","text":"","code":"data(\"dailyrainfall\") weibull_tail_test(dailyrainfall) #> # A tibble: 1 × 8 #>   is_rejected  p_out  p_hi   p_lo scale shape thresh quant #>   <lgl>        <dbl> <dbl>  <dbl> <dbl> <dbl>  <dbl> <dbl> #> 1 FALSE       0.0667     0 0.0667  96.0 0.912    234   0.9  # generate data set.seed(123) sample_dates <- seq.Date(from = as.Date(\"2000-01-01\"), to = as.Date(\"2010-12-31\"), by = 1) sample_data <- data.frame(dates = sample_dates, val = sample(rnorm(length(sample_dates)))) d <- sample_data |>   filter(val >= 0 & !is.na(val)) fit_uncensored <- fsmev(d)  # censor the data thresholds <- c(seq(0.1, 0.9, 0.1), 0.95) p_test <- 0.1 res <- lapply(thresholds, function(x) {   weibull_tail_test(d, cens_quant = x, p_test = p_test, R = 200) }) res <- do.call(rbind, res)  # find the optimal left-censoring threshold cens <- censored_weibull_fit(res, thresholds) cens$optimal_threshold #> [1] 1.280674 cens$quantile #> [1] 0.8  # plot return levels censored vs uncensored rp <- c(2:100) rl_uncensored <- return.levels.mev(fit_uncensored, return.periods = rp)$rl  rl_censored <- qmev(1 - 1/rp, cens$shape, cens$scale, fit_uncensored$n) plot(rp, rl_uncensored, type = \"l\", log = \"x\", ylim = c(0, max(rl_censored, rl_uncensored)),       ylab = \"return level\", xlab = \"return period (a)\") points(pp.weibull(fit_uncensored$maxima), sort(fit_uncensored$maxima)) lines(rp, rl_censored, type = \"l\", col = \"red\") legend(\"bottomright\", legend = c(\"uncensored\",          paste0(\"censored at \", round(cens$optimal_threshold, 1), \"mm\")),          col = c(\"black\", \"red\"), lty = c(1, 1))"}]
